import datetime
from tinkoff.invest.utils import now
from tinkoff.invest import CandleInterval
from tinkoff.invest import InstrumentRequest
import matplotlib.pyplot as plt
import numpy as np

from Methods import invest_tools as it
from Methods.historical_shares_prices import historical_shares_prices_func
from Methods.get_securities_lists import all_rub_shares

#x, y = historical_shares_prices_func("BBG004730N88", datetime.datetime(2023, 11, 1, tzinfo=datetime.timezone.utc), now(), CandleInterval.CANDLE_INTERVAL_DAY)

#x, y = historical_shares_prices_func("BBG004730JJ5", datetime.datetime(2023, 11, 1, tzinfo=datetime.timezone.utc), now(), CandleInterval.CANDLE_INTERVAL_DAY)
#z=it.normalize_list(y)
#plt.plot(x, y)
#plt.show()

#print(it.risk("BBG004730N88", datetime.datetime(2023, 10, 1, tzinfo=datetime.timezone.utc), now()))
#print(it.profitability_by_n_periods('BBG004730N88', 5, datetime.datetime(2018, 11, 5, tzinfo=datetime.timezone.utc), now()))

shares=all_rub_shares()[0]
from_timestamp=datetime.datetime(2018, 11, 1, tzinfo=datetime.timezone.utc)
to_timestamp=datetime.datetime(2023, 11, 1, tzinfo=datetime.timezone.utc)

risk_list=[]
for share in shares:
    x, y = historical_shares_prices_func(share, from_timestamp, to_timestamp, CandleInterval.CANDLE_INTERVAL_WEEK)
    y_norm=it.normalize_list(y)
    risk_list.append(np.std(np.asarray(y_norm)))
    #plt.plot(x, y_norm)
    #plt.show()
mean_shares_risk=np.mean(np.asarray(risk_list))
print(risk_list)   